project:
  licenses:
    - license: AGPL-3.0
      header: |
        opsiconfd is part of the desktop management solution opsi http://www.opsi.org
        Copyright (c) 2008-{year} uib GmbH <info@uib.de>
        All rights reserved.
        License: {license}

git:
  hooks:
    pre-push: |
      echo "Running ruff..."
      poetry run ruff check opsiconfd tests perftest
      echo "Running mypy..."
      poetry run mypy opsiconfd tests perftest

transifex:
  upload_resources:
    - organization: opsi-org
      project: opsiorg
      resource_name: hwaudit.properties
      resource_file: opsiconfd_data/etc/hwaudit/locales/hwaudit_en.properties
  download_translations:
    - organization: opsi-org
      project: opsiorg
      resource_name: hwaudit.properties
      install_dir: opsiconfd_data/etc/hwaudit/locales
      min_review_rate: $TRANSIFEX_MIN_REVIEW_RATE
      languages:
        - de
        - fr

pyinstaller-poetry:
  one_file: no
  strip: yes
  extra_args:
    # Do not use contents-directory for now
    - "--contents-directory"
    - "."
  hidden_imports:
    all:
      - ipaddress
      - colorsys
      # UserWarning: You do not have a working installation of the service_identity module: 'No module named 'service_identity''.
      # Please install it from <https://pypi.python.org/pypi/service_identity> and make sure all of its dependencies are satisfied.
      # Without the service_identity module, Twisted can perform only rudimentary TLS client hostname verification.
      # Many valid certificate/hostname mappings may be rejected.
      - service_identity
      - OPSI.Util.WIM
      - opsiconfd.application.utils
      - opsiconfd.rest
      - opsiconfd.utils.fastapi
  collect_submodules:
    - pydantic_core
    - pydantic
    - uvicorn
    # Collecting both modules so that they can be used depending on the configuration
    - mysqldb
    - pymysql
    # Collecting both modules so that they can be used depending on the configuration
    - websockets
    - wsproto
  scripts:
    - script: run-opsiconfd
      binaries:
        - opsiconfd
  data_files:
    - src: opsiconfd_data/**/*
      dst: opsiconfd_data
  dirname: opsiconfd
  after_script: |
    rm -r dist/opsiconfd/tk dist/opsiconfd/tcl
    mkdir dist/opsiconfd/tk dist/opsiconfd/tcl
    find dist/opsiconfd -iname "*.c" -delete
    find dist/opsiconfd -iname "*.h" -delete
    find dist/opsiconfd -iname "*.so" -exec chmod -x "{}" \;
    find dist/opsiconfd -iname "*.so.*" -exec chmod -x "{}" \;

package:
  name: opsiconfd
  type: binary
  systemd: yes
  depends:
    - librsync | librsync2 | librsync1
    - pigz
  conflicts:
    - opsi-server (<< 4.3)
    - opsi-server-full (<< 4.3)
    - opsi-server-expert (<< 4.3)
  source_script: |
    pyi_src="${SRC}"
    if [ -e "${SRC}/dist/opsiconfd/opsiconfd" ]; then pyi_src="${SRC}/dist"; fi
    mkdir -p ${DST}/rootfs/etc/opsi
    mkdir -p ${DST}/rootfs/usr/bin
    mkdir -p ${DST}/rootfs/usr/lib/opsiconfd
    mkdir -p ${DST}/rootfs/usr/share/opsiconfd
    mkdir -p ${DST}/rootfs/var/lib/opsi/depot
    mkdir -p ${DST}/rootfs/var/lib/opsi/ntfs-images
    mkdir -p ${DST}/rootfs/var/lib/opsi/public
    mkdir -p ${DST}/rootfs/var/lib/opsi/repository
    mkdir -p ${DST}/rootfs/var/lib/opsi/workbench
    mkdir -p ${DST}/rootfs/var/log/opsi/bootimage
    mkdir -p ${DST}/rootfs/var/log/opsi/clientconnect
    mkdir -p ${DST}/rootfs/var/log/opsi/instlog
    mkdir -p ${DST}/rootfs/var/log/opsi/opsiconfd
    mkdir -p ${DST}/rootfs/var/log/opsi/userlogin

    mkdir -p ${DST}/systemd_units
    if [ -d ${pyi_src}/opsiconfd-amd64 ]; then
      mkdir -p ${DST}/rootfs-amd64/usr/lib
      mkdir -p ${DST}/rootfs-amd64/etc/opsi
      cp -a ${pyi_src}/opsiconfd-amd64 ${DST}/rootfs-amd64/usr/lib/opsiconfd
      cp -a ${pyi_src}/opsiconfd-amd64/opsiconfd_data/etc/* ${DST}/rootfs-amd64/etc/opsi/
    fi;
    if [ -d ${pyi_src}/opsiconfd-arm64 ]; then
      mkdir -p ${DST}/rootfs-arm64/usr/lib
      mkdir -p ${DST}/rootfs-arm64/etc/opsi
      cp -a ${pyi_src}/opsiconfd-arm64 ${DST}/rootfs-arm64/usr/lib/opsiconfd
      cp -a ${pyi_src}/opsiconfd-arm64/opsiconfd_data/etc/* ${DST}/rootfs-arm64/etc/opsi/
    fi;
    echo "#!/bin/sh"                                  > ${DST}/rootfs/usr/bin/opsiconfd
    echo "exec /usr/lib/opsiconfd/opsiconfd \"\$@\"" >> ${DST}/rootfs/usr/bin/opsiconfd
    chmod 755 ${DST}/rootfs/usr/bin/opsiconfd
    install -m 755 ${SRC}/opsiconfd_data/opsiconfd-pre-start ${DST}/rootfs/usr/lib/opsiconfd/
    cp -a ${SRC}/opsiconfd_data/static ${DST}/rootfs/usr/share/opsiconfd/
    cp -a ${SRC}/opsiconfd_data/etc/* ${DST}/rootfs/etc/opsi/
    cp -a ${SRC}/opsiconfd_data/usr/lib/* ${DST}/rootfs/usr/lib/opsiconfd/
    cp -a ${SRC}/opsiconfd_data/opsiconfd.service ${DST}/systemd_units/


  postinst_script: |
    /usr/lib/opsiconfd/opsiconfd-pre-start

    # Remove obsolete files
    [ -e /etc/logrotate.d/opsiconfd ] && rm /etc/logrotate.d/opsiconfd || true
    rm /etc/rc*/*opsiconfd 2>/dev/null || true
    [ -e /etc/init.d/opsiconfd ] && rm /etc/init.d/opsiconfd
    [ -e /etc/opsi/systemdTemplates ] && rm -r /etc/opsi/systemdTemplates
    [ -e /etc/systemd/system/opsiconfd.service.simple ] && rm /etc/systemd/system/opsiconfd.service.simple
    [ -e /etc/systemd/system/opsiconfd.service ] && rm /etc/systemd/system/opsiconfd.service
    systemctl daemon-reload || true

    [ -e /var/lib/opsi ] || mkdir -p /var/lib/opsi
    [ -e /etc/dhcpd.conf ] && sed -i s'#"dhcpdConfigFile".*#"dhcpdConfigFile":         "/etc/dhcpd.conf",#' /etc/opsi/backends/dhcpd.conf
    [ -e /etc/dhcpd.conf ] && sed -i s'#linux/pxelinux.0#opsi/pxelinux.0#' /etc/opsi/backends/dhcpd.conf
    [ -e /var/lib/opsi/server_commands_custom.conf ] || touch /var/lib/opsi/server_commands_custom.conf

    # Removing files dating before opsi 4.1
    [ -e /etc/opsi/version ] && rm /etc/opsi/version

    # Setup opsiconfd
    grep "run-as-user" /etc/opsi/opsiconfd.conf >/dev/null || echo -e "run-as-user = opsiconfd" >> /etc/opsi/opsiconfd.conf
    /usr/bin/opsiconfd setup --non-interactive --log-level=0 --log-level-stderr=0 --log-level-file=0 || true
