#!/bin/sh +e

#===========[ config ]============#
DEBUG=0
INTERVAL=30
PID_FILE=/var/run/opsiconfd/opsiconfd.pid
#=================================#

check_ucs_backend() {
	bindPw=$(grep "^bindPw" /etc/opsi/backendManager.d/40_opsi4ucs.conf 2>/dev/null | cut -d '"' -f2)
	LDAP_SECRET=$(cat /etc/machine.secret)
	if [ "$bindPw" != "$LDAP_SECRET" ]; then
		[ -e /tmp/.opsi4ucs.conf ] && rm /tmp/.opsi4ucs.conf
		cp /etc/opsi/backendManager.d/40_opsi4ucs.conf /tmp/.opsi4ucs.conf
		cat /tmp/.opsi4ucs.conf | sed "s/^bindPw\s*=.*/bindPw = \"${LDAP_SECRET}\"/" > /etc/opsi/backendManager.d/40_opsi4ucs.conf
		rm /tmp/.opsi4ucs.conf
		/etc/init.d/opsiconfd restart
	fi
}

start_opsiconfd() {
	echo "opsiconfd not running, starting opsiconfd." | logger -p daemon.error -t opsiconfd-guard
	/etc/init.d/opsiconfd start
}

start_loop() {
	sleep 60
	while true; do
		[ -e /etc/opsi/backendManager.d/40_opsi4ucs.conf ] && check_ucs_backend
		PID=`cat $PID_FILE 2>/dev/null`
		if [ "$?" != "0" ]; then
			[ "$DEBUG" = "1" ] && echo "opsiconfd pid-file not found." | logger -p daemon.debug -t opsiconfd-guard
			start_opsiconfd
		else
			[ "$DEBUG" = "1" ] && echo "pid of opsiconfd: $PID" | logger -p daemon.debug -t opsiconfd-guard
			if [ ! -d "/proc/$PID" ]; then
				start_opsiconfd
			fi
		fi
		sleep $INTERVAL
	done
}

if [ "$1" = "daemon" ]; then
	start_loop
else
	exe=$0
	if [ "${exe:0:1}" = "." ]; then
		exe=`pwd`${exe:1}
	fi
	# prevent blocking umounts
	cd /
	# fork daemon
	$exe daemon </dev/null >/dev/null 2>/dev/null &
fi

